                                                                                                                                                                                                                                                               
Message-Id: <1437996348.2222566.334051593.69B0B772@webmail.messagingengine.com>
X-Sasl-Enc: c1WhwXGTGqqkgBYSa44eEI2GfdTPgIhZNN2f6j1Mmedk 1437996348
From: James Domingo <jdomingo@green-code.com>
To: landis-ii-developers@googlegroups.com
MIME-Version: 1.0
Content-Transfer-Encoding: 7bit
Content-Type: multipart/alternative; boundary="_----------=_143799634822225661";
 charset="utf-8"
X-Mailer: MessagingEngine.com Webmail Interface - ajax-63a5d8c6
X-Personalityid: 20129941
Subject: Re: [LANDIS-II Developers] GitHub Configuration
Date: Mon, 27 Jul 2015 06:25:48 -0500
In-Reply-To: <ad110f76-5a32-4c91-a2f2-7fe392803d22@googlegroups.com>
References: <ad110f76-5a32-4c91-a2f2-7fe392803d22@googlegroups.com>

This is a multi-part message in MIME format.

--_----------=_143799634822225661
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain; charset="iso-8859-1"

_Technical Issues_

On July 24, Robert Scheller <rmscheller@gmail.com> wrote:

> The GitHub repository was configured as it was for expediency;
ease-of-transition; and variable activity of different sub-directories.

Unfortunately, those reasons don't justify multiple projects in a single
Git repository.

> Expediency: Self explanatory given the impending Google Code
> shut down.

This  isn't a factor because even now, there's plenty of time to execute
a collective plan to migrate each of projects from the Subversion
repository into its own Git repository.=A0 Using  the GitHub import
link[1] that I shared previously, any developer -- even those without
write-access to Google Code -- can create a single-project Git
repository in their GitHub account.

So  the work can easily be divided among L-II developers working on
different projects -- put the project list into a Google spreadsheet,
and have developers sign up for the ones they'll migrate.=A0 Once all
the projects are assigned, the developers can simultaneously start
their imports.

It takes only a minute to launch the import process for a project.=A0 Once
a repository is ready in their GitHub account, the developer can begin
using it right away for development.=A0 She doesn't have to wait until the
repository is transferred to the Foundation to continue working on her
code.=A0 The repositories can be transferred as time permits, later on
when it's convenient for the Foundation admins.


> Transition: We wanted to centralize some of the wikis that are very
> general (say, for all libraries).

True, just because each Git repository can have its own wiki, doesn't
mean they should.=A0 For  some library projects, a simple README.md file
(which replaces its individual page in the Google Code wiki) may be
sufficient.=A0 Some more complex libraries like Succession may warrant
having their own separate wiki.

But  common information that applies to multiple components (like
library packaging) does not justify putting those components into a
single Git repository.=A0 A more appropriate home for this shared
developer information is the SDK project.=A0 After  all, every developer,
whether working on a library or an extension, needs to visit that
project to obtain a release of the SDK.=A0 The wiki of the SDK GitHub
project is the logical choice to put information from the Google Code
wiki that applies to multiple components.


> Variable activity: Some extensions are very static and it was
> convenient to store them in one place.

No extension or library is _permanently_ stable.=A0 Even a fairly mature
component will eventually need modification.=A0 It  doesn't even have to
be a scientific change; it could be purely technical (for example,
upgrading the target framework from NET 3.5 to
4.5).=A0 But the slow pace of a component's evolution does not warrant
    making all future development more difficult (as in, beyond
    inconvenient) by forcing it to share branches and tag with other
    components.

In short, none of these reasons  -- alone or collectively -- justify
shoving a multi-project square Subversion peg into a round Git hole.
That migration approach will not allow developers to use Git branching
and tagging properly.


_Communication Issues_

Although these serious technical issues still haven't been adequately
addressed,  this conversation has raised even more alarming issues about
communication.=A0 I raised those technical concerns in 2 posts on another
topic[2] on this list.=A0 *But those 2 posts have been deleted.=A0 *For the
record, here are links to PDFs of them (3rd post[3] and 5th post[4] in
that topic).

*This censorship is unjustified.=A0 *Removing  posts from a public mailing
list is only justified in rare circumstances -- spam, security (e.g.,
inadvertent disclosure of user credentials), or abusive language.=A0 My
posts clearly don't fall under any of these categories.

Why were they removed?=A0 Why didn't you post your response on that
original topic, instead of creating this new topic?=A0 Their removal is a
totally inappropriate way to deal with criticism.=A0 Their removal is an
abuse of the trust that the developer community puts into those who
manage the list.

I've been one of those managers, along with Rob (who is the list owner)
since the list was created years ago.=A0 *But I no longer am.* I just
discovered last Friday (July 24) that *my administrative access to the
list has removed without any notice or explanation.=A0 *Another
unjustified action that flies in the face of all the talk about
transparency.

It'll be very interesting to see if this post meets the same fate as
those earlier posts.=A0 Or if it will be met with the professionalism that
this community forum deserves.

Jimm



Links:

  1. https://help.github.com/articles/importing-from-subversion/
  2. https://groups.google.com/forum/#%21topic/landis-ii-developers/Wnx6lN1=
RQ1A
  3. https://drive.google.com/file/d/0B6S5gBSWX789Y0VkWG1NTm1yZnc/view?usp=
=3Dsharing
  4. https://drive.google.com/file/d/0B6S5gBSWX789S2t3VXBuXzlSdWs/view?usp=
=3Dsharing

--_----------=_143799634822225661
Content-Transfer-Encoding: 7bit
Content-Type: text/html; charset="iso-8859-1"

<!DOCTYPE html>
<html>
<head>
<title></title>
</head>
<body><div><u>Technical Issues</u><br></div>
<div>&nbsp;</div>
<div>On July 24, Robert Scheller &lt;<a href="mailto:rmscheller@gmail.com">rmscheller@gmail.com</a>&gt; wrote:<br></div>
<div>&nbsp;</div>
<blockquote><div>The GitHub repository was configured as it was for expediency; 
ease-of-transition; and variable activity of different sub-directories.<br></div>
</blockquote><div>&nbsp;</div>
<div>Unfortunately, those reasons don't justify multiple projects in a single Git repository.<br></div>
<div>&nbsp;</div>
<blockquote><div>Expediency: Self explanatory given the impending Google Code shut down.<br></div>
</blockquote><div>&nbsp;</div>
<div>This
 isn't a factor because even now, there's plenty of time to execute a 
collective plan to migrate each of projects from the Subversion 
repository into its own Git repository.&nbsp; Using
 the <a href="https://help.github.com/articles/importing-from-subversion/">GitHub import link</a> that I shared previously, any developer -- even those without 
write-access to Google Code -- can create a single-project Git repository in their GitHub account.<br></div>
<div>&nbsp;</div>
<div>So
 the work can easily be divided among L-II developers working on 
different projects -- put the project list into a Google spreadsheet, 
and have developers sign up for the ones they'll migrate.&nbsp; Once all the projects are assigned, the developers can simultaneously start their imports.<br></div>
<div>&nbsp;</div>
<div>It takes only a minute to launch the import process for a project.&nbsp; Once a repository is ready in their GitHub account, the developer can begin using it right away for development.&nbsp; She doesn't have to wait until the repository is transferred to the Foundation to continue working on her code.&nbsp; The repositories can be transferred as time permits, later on when it's convenient for the Foundation admins.<br></div>
<div>&nbsp;</div>
<div>&nbsp;</div>
<blockquote><div>Transition: We wanted to centralize some of the wikis that are very general (say, for all libraries).<br></div>
</blockquote><div>&nbsp;</div>
<div>True, just because each Git repository can have its own wiki, doesn't mean they should.&nbsp; For
 some library projects, a simple README.md file (which replaces its 
individual page in the Google Code wiki) may be sufficient.&nbsp; Some more complex libraries like Succession may warrant having their own separate wiki.<br></div>
<div>&nbsp;</div>
<div>But
 common information that applies to multiple components (like library 
packaging) does not justify putting those components into a single Git 
repository.&nbsp; A more appropriate home for this shared developer information is the SDK project.&nbsp; After
 all, every developer, whether working on a library or an extension, 
needs to visit that project to obtain a release of the SDK.&nbsp; The
 wiki of the SDK GitHub project is the logical choice to put information
 from the Google Code wiki that applies to multiple components.<br></div>
<div>&nbsp;</div>
<div>&nbsp;</div>
<blockquote><div>Variable activity: Some extensions are very static and it was convenient to store them in one place.<br></div>
</blockquote><div>&nbsp;</div>
<div>No extension or library is <u>permanently</u> stable.&nbsp; Even a fairly mature component will eventually need modification.&nbsp; It
 doesn't even have to be a scientific change; it could be purely 
technical (for example, upgrading the target framework from NET 3.5 to 
4.5).&nbsp; But the slow pace of a component's evolution does 
not warrant making all future development more difficult (as in, beyond 
inconvenient) by forcing it to share branches and tag with other 
components.<br></div>
<div>&nbsp;</div>
<div>In short, none of these reasons
 -- alone or collectively -- justify shoving a multi-project square 
Subversion peg into a round Git hole.&nbsp; That migration approach will not allow developers to use Git branching and tagging properly.<br></div>
<div>&nbsp;</div>
<div>&nbsp;</div>
<div><u>Communication Issues</u><br></div>
<div>&nbsp;</div>
<div>Although
 these serious technical issues still haven't been adequately addressed,
 this conversation has raised even more alarming issues about 
communication.&nbsp; I raised those technical concerns in 2 posts on <a href="https://groups.google.com/forum/#%21topic/landis-ii-developers/Wnx6lN1RQ1A">another topic</a> on this list.&nbsp; <b>But those 2 posts have been deleted.&nbsp; </b>For the record, here are links to PDFs of them (<a href="https://drive.google.com/file/d/0B6S5gBSWX789Y0VkWG1NTm1yZnc/view?usp=sharing">3rd post</a> and <a href="https://drive.google.com/file/d/0B6S5gBSWX789S2t3VXBuXzlSdWs/view?usp=sharing">5th post</a> in that topic).<br></div>
<div>&nbsp;</div>
<div><b>This censorship is unjustified.&nbsp; </b>Removing
 posts from a public mailing list is only justified in rare 
circumstances -- spam, security (e.g., inadvertent disclosure of user 
credentials), or abusive language.&nbsp; My posts clearly don't fall under any of these categories.<br></div>
<div>&nbsp;</div>
<div>Why were they removed?&nbsp; Why didn't you post your response on that original topic, instead of creating this new topic?&nbsp; Their removal is a totally inappropriate way to deal with criticism.&nbsp; Their removal is an abuse of the trust that the developer community puts into those who manage the list.<br></div>
<div>&nbsp;</div>
<div>I've been one of those managers, along with Rob (who is the list owner) since the list was created years ago.&nbsp; <b>But I no longer am.</b><br></div>
<div>I just discovered last Friday (July 24) that <b>my administrative access to the list has removed without any notice or explanation.&nbsp; </b>Another unjustified action that flies in the face of all the talk about transparency.<br></div>
<div>&nbsp;</div>
<div>It'll be very interesting to see if this post meets the same fate as those earlier posts.&nbsp; Or if it will be met with the professionalism that this community forum deserves.<br></div>
<div>&nbsp;</div>
<div>Jimm<br></div>
<div>&nbsp;</div>
</body>
</html>

--_----------=_143799634822225661--

